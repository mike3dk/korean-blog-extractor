name: Daily Site Validation

on:
  schedule:
    # Runs daily at midnight PST (08:00 UTC)
    - cron: '0 8 * * *'
  workflow_dispatch:  # Allows manual trigger

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: 'latest'

jobs:
  validate-real-sites:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        validation:
          - name: "PostHandler"
            script: "scripts/test/run_posts.py"
            description: "real blog sites"
          - name: "BlogChartHandler"
            script: "scripts/test/run_blogchart.py"
            description: "real blog ranking sites"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ env.POETRY_VERSION }}
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install dependencies
      run: poetry install
      
    - name: Test ${{ matrix.validation.name }} against ${{ matrix.validation.description }}
      id: validation
      run: |
        echo "=== Testing ${{ matrix.validation.name }} against ${{ matrix.validation.description }} ==="
        OUTPUT_FILE="${{ matrix.validation.name }}_validation_output.txt"
        
        if poetry run python ${{ matrix.validation.script }} > "$OUTPUT_FILE" 2>&1; then
          echo "${{ matrix.validation.name }} validation passed!"
        else
          echo "${{ matrix.validation.name }} validation failed!"
          cat "$OUTPUT_FILE"
          echo "output_file=$OUTPUT_FILE" >> $GITHUB_OUTPUT
          exit 1
        fi
        
    - name: Upload validation output on failure
      if: failure() && steps.validation.outputs.output_file
      uses: actions/upload-artifact@v4
      with:
        name: validation-output-${{ matrix.validation.name }}
        path: ${{ steps.validation.outputs.output_file }}
        retention-days: 30
        
  create-issue:
    needs: validate-real-sites
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Create issue on validation failure
      uses: actions/github-script@v7
      with:
        script: |
          const today = new Date().toISOString().split('T')[0];
          const timestamp = new Date().toISOString();
          
          // Check for existing issue today
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'validation-failure'
          });
          
          const todayIssue = existingIssues.data.find(issue => 
            issue.title.includes(today)
          );
          
          if (!todayIssue) {
            const body = [
              '## Daily Site Validation Failed',
              '',
              `**Date:** ${timestamp}`,
              '',
              '### Failed Validations',
              '- One or more validation steps failed during the daily check',
              '- Check the workflow run for detailed error messages',
              '- Download validation artifacts for complete logs',
              '',
              '### Next Steps',
              '1. Review the failed validation logs',
              '2. Check if target websites have changed their structure',
              '3. Update extractors if necessary',
              '4. Re-run the validation workflow',
              '',
              `**Workflow Run:** ${context.payload.repository.html_url}/actions/runs/${context.runId}`
            ].join('\n');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Daily Site Validation Failed - ${today}`,
              body: body,
              labels: ['validation-failure', 'bug']
            });
          }